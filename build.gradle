plugins {
    id 'java'
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
    id 'signing'
    id 'org.jreleaser' version '1.19.0'
}

group = 'com.moftium'
version = file("VERSION").text.trim()

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.0'
    testImplementation 'org.spockframework:spock-core:2.4-M6-groovy-4.0'
}

java {
    withSourcesJar()
    withJavadocJar()
    toolchain {
        languageVersion = JavaLanguageVersion.of(8)
    }
}

tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    failOnError = false
}

test {
    useJUnitPlatform()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "anymapper"
            from components.java

            pom {
                name = "AnyMapper"
                description = "AnyMapper is a lightweight Java library for transforming deeply nested Map<String, Object> structures into different shapes based on a declarative mapping configuration. It supports both flat and nested remapping of keys and values, including intelligent handling of List<Map<...>> structures. Designed for flexibility and extensibility, AnyMapper simplifies data transformation pipelines without the need for boilerplate code or rigid DTO classes."
                url = "https://github.com/maxbalan/AnyMapper"

                licenses {
                    license {
                        name = "The MIT License"
                        url = "https://opensource.org/licenses/MIT"
                    }
                }

                developers {
                    developer {
                        id = System.getenv("DEVELOPER_ID")
                        name = System.getenv("DEVELOPER_NAME")
                        email = System.getenv("DEVELOPER_EMAIL")
                    }
                }

                scm {
                    connection = "scm:git:git://github.com/maxbalan/AnyMapper.git"
                    developerConnection = "scm:git:ssh://github.com:maxbalan/AnyMapper.git"
                    url = "https://github.com/maxbalan/AnyMapper"
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        armored = true
        verify = false
        mode = 'FILE'
        publicKey = System.getenv("PGP_SIGN_KEY_PUB")
        secretKey = System.getenv("PGP_SIGN_KEY_PRIV")
    }

    release {
        github {
            enabled = true
            repoOwner = 'maxbalan'
            name = 'AnyMapper'
            tagName = "v{{projectVersion}}"
            releaseName = "v{{projectVersion}}"
            sign = true
            branch = 'master'
            uploadAssets = 'ALWAYS'
            changelog {
                enabled = true
                external = './CHANGELOG.md'
                formatted = 'ALWAYS'
                append {
                    enabled = true
                    target = 'CHANGELOG.md'
                }
            }
        }
    }

    deploy {
        maven {
            mavenCentral {
                anymapper {
                    sign = true
                    sourceJar = true
                    javadocJar = true
                    maxRetries = 10
                    retryDelay = 5
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}
